- name: "BASTION: Creating Public IP. Allocation: {{ bastion_public_ip_allocation }}"
  azure_rm_publicipaddress: name={{ bastion_definition.hostname }} state=present
                            resource_group={{ name }} location={{ region }}
                            allocation_method={{ bastion_public_ip_allocation }}
                            tags={{ labels }}
                            subscription_id={{ azure_subscription_id }} tenant={{ azure_tenant }}
                            client_id={{ azure_client_id }} secret={{ azure_secret }}
  tags: [ ocp, azure, compute, public_ip, bastion ]

- name: "BASTION: Creating Network Interface"
  azure_rm_networkinterface:
              name: "{{ bastion_definition.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              virtual_network: "{{ name }}"
              subnet: "{{ name }}-master-infra"
              ip_configurations:
                - { name: "{{ bastion_definition.hostname }}", public_ip_address_name: "{{ bastion_definition.hostname }}" }
              security_group: "{{ name }}-bastion-sg"
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  tags: [ ocp, azure, compute, network_interfaces, bastion ]

- name: "BASTION: Creating instance"
  azure_rm_virtualmachine:
              name: "{{ bastion_definition.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              os_type: Linux
              vm_size: "{{ bastion_definition.machine }}"
              managed_disk_type: "{{ bastion_definition.disk_type }}"
              admin_username: "{{ admin_username }}"
              ssh_password_enabled: False
              ssh_public_keys:
                 - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
                   key_data: "{{ lookup('file','{{ admin_ssh_publickey }}') }}"
              network_interfaces: "{{ bastion_definition.hostname }}"
              subnet: "{{ name }}-master-infra"
              image: "{{ azure_base_image }}"
              remove_on_absent: All
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  register: bastion_instance_result
  tags: [ ocp, azure, compute, vm, bastion ]

- name: "BASTION: Fetching Bastion Public IP"
  set_fact: bastion_public_ip="{{ bastion_instance_result.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
  tags: [ ocp, azure, compute, vm, bastion ]

- name: "BASTION: Adding group: openshift_bastion"
  add_host: hostname={{ bastion_instance_result.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}
            groups=openshift_bastion  
            ansible_user={{ admin_username }}
            bastion_public_ip={{ bastion_public_ip }}
  tags: [ ocp, azure, compute, bastion ]

- name: "MASTER: Creating Public IP. Allocation: {{ master_public_ip_allocation }}"
  azure_rm_publicipaddress: name={{ item.hostname }} state=present
                            resource_group={{ name }} location={{ region }}
                            allocation_method={{ master_public_ip_allocation }}
                            tags={{ labels }}
                            subscription_id={{ azure_subscription_id }} tenant={{ azure_tenant }}
                            client_id={{ azure_client_id }} secret={{ azure_secret }}
  loop: "{{ master_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, public_ip, master ]

- name: "MASTER: Creating Network Interface"
  azure_rm_networkinterface: 
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              virtual_network: "{{ name }}"
              subnet: "{{ name }}-master-infra"
              ip_configurations:
                - name: "{{ item.hostname }}"
                  public_ip_address_name: "{{ item.hostname }}" 
                  public_ip_allocation_method: "{{ master_public_ip_allocation }}"
              security_group: "{{ name }}-master-sg"
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ master_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, network_interfaces, master ]

- name: "MASTER: Creating instances"
  azure_rm_virtualmachine: 
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              os_type: Linux
              vm_size: "{{ item.machine }}"
              managed_disk_type: "{{ item.disk_type }}"
              data_disks: 
                 - { lun: 0, managed_disk_type: "{{ item.disk_docker_type }}", disk_size_gb: "{{ item.disk_docker_size }}" }
              admin_username: "{{ admin_username }}"
              ssh_password_enabled: False 
              ssh_public_keys: 
                 - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
                   key_data: "{{ lookup('file','{{ admin_ssh_publickey }}') }}" 
              network_interfaces: "{{ item.hostname }}"
              subnet: "{{ name }}-master-infra"
              image: "{{ azure_base_image }}"
              remove_on_absent: All
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ master_definition | flatten(levels=1) }}"
  register: master_instance_creation
  tags: [ ocp, azure, compute, vm, master ]

- name: "MASTER: (First MASTER only) Public IP: {{ master_instance_creation.results[0].ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
  set_fact: master_public_ip="{{ master_instance_creation.results[0].ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
  tags: [ ocp, azure, compute, vm, master ]

- name: "MASTER: Adding group: openshift_master_group"
  add_host: hostname={{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }} groups=openshift_master_group
            ansible_user={{ admin_username }}
  loop: "{{ master_instance_creation.results | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, master ]

- name: "INFRA: Creating Public IP. Allocation: {{ infra_public_ip_allocation }}"
  azure_rm_publicipaddress: name={{ item.hostname }} state=present
                            resource_group={{ name }} location={{ region }}
                            allocation_method={{ infra_public_ip_allocation }}
                            tags={{ labels }}
                            subscription_id={{ azure_subscription_id }} tenant={{ azure_tenant }}
                            client_id={{ azure_client_id }} secret={{ azure_secret }}
  loop: "{{ infra_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, public_ip, infra ]

- name: "INFRA: Creating Network Interface"
  azure_rm_networkinterface:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              virtual_network: "{{ name }}"
              subnet: "{{ name }}-master-infra"
              ip_configurations:
                - name: "{{ item.hostname }}"
                  public_ip_address_name: "{{ item.hostname }}" 
                  public_ip_allocation_method: "{{ infra_public_ip_allocation }}"
              security_group: "{{ name }}-infra-sg"
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ infra_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, network_interfaces, infra ]

- name: "INFRA: Creating instances"
  azure_rm_virtualmachine:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              os_type: Linux
              vm_size: "{{ item.machine }}"
              managed_disk_type: "{{ item.disk_type }}"
              data_disks:
                 - { lun: 0, managed_disk_type: "{{ item.disk_docker_type }}", disk_size_gb: "{{ item.disk_docker_size }}" }
              admin_username: "{{ admin_username }}"
              ssh_password_enabled: False
              ssh_public_keys:
                 - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
                   key_data: "{{ lookup('file','{{ admin_ssh_publickey }}') }}"
              network_interfaces: "{{ item.hostname }}"
              subnet: "{{ name }}-master-infra"
              image: "{{ azure_base_image }}"
              remove_on_absent: All
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ infra_definition | flatten(levels=1) }}"
  register: infra_instance_creation
  tags: [ ocp, azure, compute, vm, infra ]

- name: "INFRA: (First INFRA only) Public IP: {{ infra_instance_creation.results[0].ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
  set_fact: infra_public_ip="{{ infra_instance_creation.results[0].ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
  tags: [ ocp, azure, compute, vm, infra ]

- name: "INFRA: Adding group: openshift_infra_group"
  add_host: hostname={{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }} groups=openshift_infra_group
            ansible_user={{ admin_username }}
  loop: "{{ infra_instance_creation.results | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, infra ]

- name: "NODE: Creating Public IP. Allocation: {{ node_public_ip_allocation }}"
  azure_rm_publicipaddress: name={{ item.hostname }} state=present
                            resource_group={{ name }} location={{ region }}
                            allocation_method={{ node_public_ip_allocation }}
                            tags={{ labels }}
                            subscription_id={{ azure_subscription_id }} tenant={{ azure_tenant }}
                            client_id={{ azure_client_id }} secret={{ azure_secret }}
  loop: "{{ infra_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, public_ip, node ]

- name: "NODE: Creating Network Interface"
  azure_rm_networkinterface:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              virtual_network: "{{ name }}"
              subnet: "{{ name }}-node"
              ip_configurations:
                - name: "{{ item.hostname }}"
                  public_ip_address_name: "{{ item.hostname }}"
                  public_ip_allocation_method: "{{ node_public_ip_allocation }}"
              security_group: "{{ name }}-node-sg"
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ node_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, network_interfaces, node ]

- name: "NODE: Creating instances"
  azure_rm_virtualmachine:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              os_type: Linux
              vm_size: "{{ item.machine }}"
              managed_disk_type: "{{ item.disk_type }}"
              data_disks:
                 - { lun: 0, managed_disk_type: "{{ item.disk_docker_type }}", disk_size_gb: "{{ item.disk_docker_size }}" }
              admin_username: "{{ admin_username }}"
              ssh_password_enabled: False
              ssh_public_keys:
                 - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
                   key_data: "{{ lookup('file','{{ admin_ssh_publickey }}') }}"
              network_interfaces: "{{ item.hostname }}"
              subnet: "{{ name }}-node"
              image: "{{ azure_base_image }}"
              remove_on_absent: All
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ node_definition | flatten(levels=1) }}"
  register: node_instance_creation
  tags: [ ocp, azure, compute, vm, node ]

- name: "NODE: Adding group: openshift_node_group"
  add_host: hostname={{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }} groups=openshift_node_group
            ansible_user={{ admin_username }} 
  loop: "{{ node_instance_creation.results | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, node ]

- name: "GLUSTER: Creating Public IP. Allocation: {{ gluster_public_ip_allocation }}"
  azure_rm_publicipaddress: name={{ item.hostname }} state=present
                            resource_group={{ name }} location={{ region }}
                            allocation_method={{ gluster_public_ip_allocation }}
                            tags={{ labels }}
                            subscription_id={{ azure_subscription_id }} tenant={{ azure_tenant }}
                            client_id={{ azure_client_id }} secret={{ azure_secret }}
  loop: "{{ gluster_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, public_ip, gluster ]

- name: "GLUSTER: Creating Network Interface"
  azure_rm_networkinterface:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              virtual_network: "{{ name }}"
              subnet: "{{ name }}-gluster"
              ip_configurations:
                - name: "{{ item.hostname }}"
                  public_ip_address_name: "{{ item.hostname }}"
                  public_ip_allocation_method: "{{ gluster_public_ip_allocation }}"
              security_group: "{{ name }}-gluster-sg"
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ gluster_definition | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, network_interfaces, gluster ]

- name: "GLUSTER: Creating instances"
  azure_rm_virtualmachine:
              name: "{{ item.hostname }}"
              state: present
              resource_group: "{{ name }}"
              location: "{{ region }}"
              os_type: Linux
              vm_size: "{{ item.machine }}"
              managed_disk_type: "{{ item.disk_type }}"
#              data_disks:
#                 - { lun: 0, managed_disk_type: "{{ item.disk_docker_type }}", disk_size_gb: "{{ item.disk_docker_size }}" }
              admin_username: "{{ admin_username }}"
              ssh_password_enabled: False
              ssh_public_keys:
                 - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
                   key_data: "{{ lookup('file','{{ admin_ssh_publickey }}') }}"
              network_interfaces: "{{ item.hostname }}"
              subnet: "{{ name }}-gluster"
              image: "{{ azure_base_image }}"
              remove_on_absent: All
              tags: "{{ labels }}"
              subscription_id: "{{ azure_subscription_id }}"
              tenant: "{{ azure_tenant }}"
              client_id: "{{ azure_client_id }}"
              secret: "{{ azure_secret }}"
  loop: "{{ gluster_definition | flatten(levels=1) }}"
  register: gluster_instance_creation
  tags: [ ocp, azure, compute, vm, gluster ]

- name: "GLUSTER: Adding group: openshift_gluster_group"
  add_host: hostname={{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }} groups=openshift_gluster_group
            ansible_user={{ admin_username }}
  loop: "{{ gluster_instance_creation.results | flatten(levels=1) }}"
  tags: [ ocp, azure, compute, gluster ]
