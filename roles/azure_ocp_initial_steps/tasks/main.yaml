- name: "Check Parameter: azure_subscription_id"
  fail: msg="azure_subscription_id is not defined or is empty"
  when: azure_subscription_id is not defined or azure_subscription_id is none
  tags: [ always ]

- name: "Check Parameter: azure_tenant"
  fail: msg="azure_tenant is not defined or is empty"
  when: azure_tenant is not defined or azure_tenant is none
  tags: [ always ]

- name: "Check Parameter: azure_client_id"
  fail: msg="azure_client_id is not defined or is empty"
  when: azure_client_id is not defined or azure_client_id is none
  tags: [ always ]

- name: "Check Parameter: azure_secret"
  fail: msg="azure_secret is not defined or is empty"
  when: azure_secret is not defined or azure_secret is none
  tags: [ always ]
  tags: [ azure, ocp, initial, parameter ]

- name: Creating bastion_definition
  set_fact: "bastion_definition={{ { 'hostname': '{{ bastion_name }}', 'machine': '{{ bastion_machine_type }}', 'disk_type': '{{ bastion_disk_type }}', 'disk_size': '{{ bastion_disk_size }}' } }}"
  tags: [ always ]

- name: Creating master_definition
  set_fact: master_definition='{{ master_definition + [ new_item ] }}'
  vars:
     new_item: "{ 'hostname' : '{{ master_prefix }}{{ item }}', 'machine' : '{{ master_machine_type }}', 'disk_type' : '{{ master_disk_type }}', 'disk_size' : {{ master_disk_size }}, 'disk_docker_type' : '{{ master_docker_type }}', 'disk_docker_size' : {{ master_docker_size }} }"
  with_sequence: start=1 end="{{ number_of_masters }}"
  tags: [ always ]

- name: Creating infra_definition
  set_fact: infra_definition='{{ infra_definition + [ new_item ] }}'
  vars:
     new_item: "{ 'hostname' : '{{ infra_prefix }}{{ item }}', 'machine' : '{{ infra_machine_type }}', 'disk_type' : '{{ infra_disk_type }}', 'disk_size' : {{ infra_disk_size }}, 'disk_docker_type' : '{{ infra_docker_type }}', 'disk_docker_size' : {{ infra_docker_size }} }"
  with_sequence: start=1 end="{{ number_of_infras }}"
  tags: [ always ]

- name: Creating node_definition
  set_fact: node_definition='{{ node_definition + [ new_item ] }}'
  vars:
     new_item: "{ 'hostname' : '{{ node_prefix }}{{ item }}', 'machine' : '{{ node_machine_type }}', 'disk_type' : '{{ node_disk_type }}', 'disk_size' : {{ node_disk_size }}, 'disk_docker_type' : '{{ node_docker_type }}', 'disk_docker_size' : {{ node_docker_size }} }"
  with_sequence: start=1 end="{{ number_of_nodes }}"
  tags: [ always ]
